---
apiVersion: v1
kind: ConfigMap
metadata:
  name: amqp-consumer-remote-config
  namespace: default
data:
  config.yml: |-
    timeout : 30
    hostname: amqp://amqp-dispatch-remote-service
    port: 5672
    listener: # this creates count listeners listening to the following endpoints
      count: 1
      queues:
        - name: "test"
          count: 1
    sender: # this will send messages to the following endpoints
      count: 1
      queues: #
        - name: "test"
          count: 1
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: qpidrouter-remote-config
  namespace: default
data:
  qdrouterd.conf: |-
    ##
    ## Licensed to the Apache Software Foundation (ASF) under one
    ## or more contributor license agreements.  See the NOTICE file
    ## distributed with this work for additional information
    ## regarding copyright ownership.  The ASF licenses this file
    ## to you under the Apache License, Version 2.0 (the
    ## "License"); you may not use this file except in compliance
    ## with the License.  You may obtain a copy of the License at
    ##
    ##   http://www.apache.org/licenses/LICENSE-2.0
    ##
    ## Unless required by applicable law or agreed to in writing,
    ## software distributed under the License is distributed on an
    ## "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    ## KIND, either express or implied.  See the License for the
    ## specific language governing permissions and limitations
    ## under the License
    ##

    # See the qdrouterd.conf (5) manual page for information about this
    # file's format and options.

    router {
        mode: standalone
    }

    listener {
        host: 0.0.0.0
        port: amqp
        authenticatePeer: no
        saslMechanisms: ANONYMOUS
    }

    listener {
        host: 0.0.0.0
        port: 8672
        authenticatePeer: no
        http: yes
    }
    connector {
        role: inter-router
        host: 0.0.0.0
        port: 20001
        saslMechanisms: ANONYMOUS
    }

    address {
        prefix: closest
        distribution: closest
    }

    address {
        prefix: multicast
        distribution: multicast
    }

    address {
        prefix: unicast
        distribution: closest
    }

    address {
        prefix: exclusive
        distribution: closest
    }

    address {
        prefix: broadcast
        distribution: multicast
    }
    address {
        prefix: test
        distribution: multicast
    }
    address {
        prefix: event
        distribution: multicast
    }
